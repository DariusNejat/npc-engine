name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.x

      - name: Get the version
        id: get_version
        uses: dawidd6/action-get-tag@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
          pip install .[deploy,dml]

      - name: Build release
        run: |
          pyinstaller --hidden-import="sklearn.utils._cython_blas" --hidden-import="sklearn.neighbors.typedefs" `
          --hidden-import="sklearn.neighbors.quad_tree" --hidden-import="sklearn.tree._utils" `
          --hidden-import="sklearn.neighbors._typedefs" --hidden-import="sklearn.utils._typedefs" `
          --hidden-import="sklearn.neighbors._partition_nodes" --additional-hooks-dir hooks `
          --exclude-module tkinter --exclude-module matplotlib .\npc_engine\cli.py --onedir -n npc-engine -i .\docs\resources\fav.ico
          pip-licenses --format=plain-vertical --with-license-file --no-license-path --output-file dist\npc-engine\DEPENDENCY_LICENSES.txt
          tar.exe -a -c -f npc-engine-${{ steps.get_version.outputs.tag }}.zip -C dist\npc-engine .\*

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.txt
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            npc-engine-${{ steps.get_version.outputs.tag }}.zip



  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: npcengine
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get the version
        id: get_version
        uses: dawidd6/action-get-tag@v1
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./Dockerfile.cpu
          push: true
          tags: |
            npcengine/npc-engine:${{ steps.get_version.outputs.tag }}
            npcengine/npc-engine:latest
